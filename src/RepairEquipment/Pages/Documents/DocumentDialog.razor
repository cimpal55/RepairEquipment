@using RepairEquipment.Client.Services
@using RepairEquipment.Client.Services.Interfaces
@inject IUtilsService _utilsService

<MudDialog>
    <DialogContent>
        <MudForm @bind-IsValid="@success">
            <MudItem xs="12" sm="6" md="12" Class="d-flex mb-5">
                <MudGrid Spacing="1">
                    
                    <MudItem xs="12">
                         @* Name *@
                        <MudTextField MaxLength="50" T="string" Label="DocumentNumber" Required="true" RequiredError="Document number is required!" 
                                      @bind-Value="Document.DocumentNumber" AutoFocus="true" Immediate="true"/>                       
                    </MudItem>
               
                    <MudItem xs="12">
                        @* Client *@
                        <MudSelect Label="Client" Required="true" Immediate="true" RequiredError="Client is required!" @bind-Value="_selectedClient">
                            @foreach (ClientRecord client in Clients)
                            {
                                <MudSelectItem Value="@client">@client.Name</MudSelectItem>
                            }
                        </MudSelect>                        
                    </MudItem>

                    <MudItem xs="12">
                        @* Employee *@
                        <MudSelect Label="Employee" Required="true" Immediate="true" RequiredError="Employee is required!" @bind-Value="_selectedEmployee">
                            @foreach (EmployeeRecord employee in Employees)
                            {
                                <MudSelectItem Value="@employee">@employee.Name</MudSelectItem>
                            }
                        </MudSelect>                        
                    </MudItem>

                </MudGrid>
            </MudItem>
        </MudForm>
    </DialogContent>
    <DialogActions>
        @* Save *@
        <MudButton OnClick="Submit" StartIcon="@Icons.Rounded.Save" Disabled="@(!success)">Save</MudButton>

        @* Cancel *@
        <MudButton OnClick="Cancel" Color="Color.Error">Cancel</MudButton>       
    </DialogActions>
</MudDialog>


@code {
    [CascadingParameter] MudDialogInstance MudDialog { get; set; }
    [Parameter] public DocumentRecord Document { get; set; } = new DocumentRecord();
    [Parameter] public List<EmployeeRecord>? Employees { get; set; }
    [Parameter] public List<ClientRecord>? Clients { get; set; }
    [Parameter] public ClientRecord? _selectedClient { get; set; }
    [Parameter] public EmployeeRecord? _selectedEmployee { get; set; }
    bool success;

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        _selectedClient = await _utilsService.GetClientNameByIdAsync(Document.ClientID);
        _selectedEmployee = await _utilsService.GetEmployeeNameByIdAsync(Document.EmployeeID);
    }

    void Submit()
    {
        Document.ClientID = _selectedClient.ID;
        Document.EmployeeID = _selectedEmployee.ID;
        MudDialog.Close(DialogResult.Ok(Document));
    }
    
    void Cancel() => MudDialog.Cancel();

}